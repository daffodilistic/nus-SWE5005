version: '3.9'
services:
  elasticmq:
    image: softwaremill/elasticmq-native
    ports:
      - '9324:9324'
      - '9325:9325'
    volumes:
      - ./docker/volumes/elasticmq/elasticmq.conf:/opt/elasticmq.conf
  postgresql:
    image: postgres
    environment:
      POSTGRES_PASSWORD: omnitrade
      POSTGRES_USER: omnitrade
      POSTGRES_DB: omnitrade
    ports:
      - "5432:5432"
    volumes:
      - ./docker/volumes/postgres/data:/var/lib/postgresql/data
  accounts:
    image: maven:3.8-jdk-11
    depends_on:
      - mysql
    entrypoint: [ "/bin/bash", "-c" ]
    command:
      - |
        cd /var/www/app
        mvn -f ./02-account-mgt-service/pom.xml -B --no-transfer-progress -Dmaven.test.skip=true install
        mvn -f ./02-account-mgt-service/pom.xml -e -P docker spring-boot:run
    ports:
      - '8081:8080'
    volumes:
      - ./back-end/project-capstone/02-nus-account-mgt-service:/var/www/app
      - maven-repository:/root/.m2
  orders:
    image: maven:3.8-jdk-11
    depends_on:
      - accounts
      - mysql
      - elasticmq
    entrypoint: [ "/bin/bash", "-c" ]
    command:
      - |
        cd /var/www/app
        mvn -f ./03-order-matching-service-api/pom.xml -B --no-transfer-progress -Dmaven.test.skip=true install
        mvn -f ./03-order-matching-service-api/pom.xml package
        mvn -f ./03-order-matching-service/pom.xml -B --no-transfer-progress -Dmaven.test.skip=true install
        mvn -f ./03-order-matching-service/pom.xml -e -P docker spring-boot:run
    ports:
      - '8080:8080'
    volumes:
      - ./back-end/project-capstone/03-nus-order-matching-service:/var/www/app
      - maven-repository:/root/.m2
  # web_frontend:
  #   image: node:16
  #   entrypoint: [ "/bin/bash", "-c" ]
  #   command:
  #     - |
  #       cd /var/www/app
  #       npm install
  #       npm run serve
  #   ports:
  #     - '8888:8080'
  #   volumes:
  #     - ./front-end:/var/www/app

volumes:
  maven-repository:
    external: false
